import * as THREE from 'three'
import React, { useState, useEffect } from 'react'
import flatten from 'lodash-es/flatten'
import { useLoader } from '@react-three/fiber'
import { SVGLoader } from 'three/examples/jsm/loaders/SVGLoader'

const data = [4.12, 784.51, 6.06, 792.49, 0.46, 801.97, 8.22, 819.22]
// 4.34 836.69 30.64 853.94 38.62 853.94 57.38 866.45 104.39 867.74 115.17 859.55 120.35 859.55 160.88 814.05 171.45 791.41 173.39 784.51 183.74 778.04 193.66 761 196.03 751.95 203.15 744.83 197.54 737.72 183.52 737.72 182.23 735.34 194.74 729.95 195.6 720.04 185.25 711.19 175.11 692.22 193.66 679.71 208.11 684.24 217.59 698.26 223.63 698.9 236.14 686.4 239.59 670.66 243.04 637.88 246.27 629.9 248.21 612.87 257.92 606.18 265.68 616.53 265.68 611.36 260.94 602.73 265.68 593.46 272.36 593.46 281.64 582.03 286.81 582.03 294.79 572.76 289.61 566.51 289.83 553.35 306.22 539.77 310.31 543 312.25 539.77 309.24 535.46 315.27 528.77 320.88 528.77 326.7 525.97 326.7 520.15 333.6 515.4 356.24 523.81 368.53 518.21 386.22 491.25 385.35 480.47 380.39 477.02 381.47 472.71 388.16 472.71 389.45 469.47 387.72 459.77 389.45 457.83 398.94 457.83 401.09 450.07 405.62 441.66 402.82 437.35 397.86 433.25 406.48 427.21 406.48 422.47 420.28 422.47 425.68 416.43 423.52 409.31 442.28 396.81 444 391.63 456.51 371.58 475.7 350.66 493.17 354.55 507.83 363.82 517.32 374.17 528.31 374.17 543.41 362.52 565.4 358.86 573.38 366.19 585.02 366.19 607.88 347.64 614.57 351.53 608.1 362.52 610.9 368.13 644.11 370.29 657.1 364.03 667.83 363.17 670.99 356.7 684.43 354.76 706.42 347.64 714.83 351.1 727.77 395.73 736.83 400.91 750.41 400.47 752.78 397.67 769.39 397.67 784.91 386.24 800.44 387.54 806.04 381.28 810.79 381.28 817.47 386.46 846.58 387.1 848.52 384.09 896.82 385.81 896.82 380.85 930.25 388.61 945.34 392.5 950.08 387.1 952.46 387.75 957.85 398.32 963.02 398.32 959.79 391.85 971.43 373.52 993.64 372.01 1003.77 378.05 1024.69 377.4 1035.04 381.93 1044.31 381.5 1049.7 369.42 1060.05 364.46 1063.29 375.03 1094.77 373.3 1103.02 353.11 1116.33 372.56 1123.49 376.86 1140.49 374 1140.49 366.21 1147.65 366.21 1160.35 375.43 1173.25 365.6 1185.33 365.39 1196.8 357.82 1203.35 357 1205.4 349.63 1219.94 346.56 1217.48 361.5 1221.37 361.3 1223.42 346.56 1228.13 342.67 1226.49 339.18 1245.53 320.76 1272.77 311.34 1299.59 288.4 1306.96 280.83 1305.73 268.34 1316.59 248.68 1315.36 233.32 1323.34 221.24 1351.6 219.81 1356.93 210.18 1356.93 193.19 1366.35 185.4 1371.67 182.33 1370.44 172.09 1364.09 175.99 1366.76 169.23 1362.66 161.86 1358.56 151.21 1367.16 135.85 1369.62 85.89 1366.55 75.04 1377.61 74.22 1374.13 58.86 1370.65 50.87 1344.44 16.06 1345.87 .5 1326.62 .5 1315.56 7.05 1303.69 8.28 1284.44 27.53 1281.16 51.49 1283.01 83.43 1278.5 106.57 1278.3 129.71 1268.88 157.97 1246.15 184.59 1217.07 215.71 1183.08 239.26 1182.87 245.4 1169.16 254 1157.48 257.48 1130.66 281.03 1103.83 286.56 1071.69 280.01 1034.62 277.35 998.99 270.79 975.45 277.14 948.62 290.04 934.29 263.63 929.78 252.77 915.04 250.11 909.1 254.82 903.57 248.47 896.61 261.37 859.14 265.47 846.65 274.89 822.69 276.12 808.15 268.95 783.37 268.13 753.27 279.8 729.52 300.89 717.64 295.77 706.79 285.33 686.52 286.56 659.29 274.68 625.09 272.43 609.32 279.19 580.45 281.44 555.47 275.91 529.46 277.55 502.23 286.35 463.32 284.72 425.44 307.24 389.81 328.74 352.54 363.76 332.07 390.58 327.15 411.67 316.91 438.7 285.99 473.72 254.87 500.34 233.17 535.15 218.63 566.68 180.95 595.35 160.06 608.86 125.25 610.5 108.46 620.94 103.14 643.06 108.46 671.93 114.4 703.47 119.72 730.49 113.38 738.89 116.45 745.44 121.16 749.54 114.81 762.03 118.91 765.92 117.88 782.51 80.2 799.3 50.92 800.73 35.56 792.74 12.63 788.65 11.4 782.3 4.12 784.51]

const svgResource = flatten(data.map((path, index) => path.toShapes(true).map((shape) => ({ shape, index }))))

function Shape({ shape, position, color, opacity, index }) {
  return (
    <mesh position={[0, 0, -index * 50]}>
      <MeshBasicMaterial attach="material" />
      <shapeBufferGeometry attach="geometry" args={[shape]} />
    </mesh>
  )
}

export const Scene = () => {
  const [shapes, set] = useState([])
  useEffect(() => void svgResource.then(set), [])
  return (
    <group position={[1600, -700, 0]} rotation={[0, THREE.Math.degToRad(180), 0]}>
      {shapes.map((item) => (
        <Shape key={item.shape.uuid} {...item} />
      ))}
    </group>
  )
}
